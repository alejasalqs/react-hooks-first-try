[{"/Volumes/HDD 1TB/Proyectos/React/react-hooks/src/index.js":"1","/Volumes/HDD 1TB/Proyectos/React/react-hooks/src/reportWebVitals.js":"2","/Volumes/HDD 1TB/Proyectos/React/react-hooks/src/App.js":"3","/Volumes/HDD 1TB/Proyectos/React/react-hooks/src/components/Header.jsx":"4","/Volumes/HDD 1TB/Proyectos/React/react-hooks/src/components/Characters.jsx":"5","/Volumes/HDD 1TB/Proyectos/React/react-hooks/src/components/CharacterCard.jsx":"6","/Volumes/HDD 1TB/Proyectos/React/react-hooks/src/context/ThemeContext.js":"7","/Volumes/HDD 1TB/Proyectos/React/react-hooks/src/components/Search.jsx":"8","/Volumes/HDD 1TB/Proyectos/React/react-hooks/src/hooks/useCharacters.js":"9"},{"size":626,"mtime":1609347805710,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1609280185320,"results":"12","hashOfConfig":"11"},{"size":613,"mtime":1609347845520,"results":"13","hashOfConfig":"11"},{"size":761,"mtime":1609347918710,"results":"14","hashOfConfig":"11"},{"size":2526,"mtime":1609376967890,"results":"15","hashOfConfig":"11"},{"size":281,"mtime":1609348969250,"results":"16","hashOfConfig":"11"},{"size":83,"mtime":1609347673520,"results":"17","hashOfConfig":"11"},{"size":349,"mtime":1609357927320,"results":"18","hashOfConfig":"11"},{"size":486,"mtime":1609376854040,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1pip5nw",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"/Volumes/HDD 1TB/Proyectos/React/react-hooks/src/index.js",[],["42","43"],"/Volumes/HDD 1TB/Proyectos/React/react-hooks/src/reportWebVitals.js",[],"/Volumes/HDD 1TB/Proyectos/React/react-hooks/src/App.js",[],"/Volumes/HDD 1TB/Proyectos/React/react-hooks/src/components/Header.jsx",["44","45"],"import React, { useState, useContext } from 'react'\nimport { ThemeContext } from '../context/ThemeContext';\nimport './styles/header.css';\n\n\n// Este header se encarga del estado de la aplicación entre DarkMode y LightMode\nexport const Header = ({darkMode, setDarkMode}) => {\n\n    const color = useContext(ThemeContext);\n\n    const handleClick = () => {\n        // Cada vez que se de un click va a cambiar el estado\n        setDarkMode(!darkMode);\n    }\n\n    return (\n        <div className={`header ${darkMode ? 'darkMode' : 'lightMode'}`}>\n            <h1>ReactHooks + Rick And Morty API 🚀</h1>\n            <button className='header__btn' onClick={handleClick} type=\"button\">{darkMode ? 'Light Mode 🌝' : 'Dark Mode 🌚'}</button>\n        </div>\n    )\n}\n","/Volumes/HDD 1TB/Proyectos/React/react-hooks/src/components/Characters.jsx",["46"],"import React, { useEffect, useState, useReducer, useMemo, useRef, useCallback } from 'react'\nimport { useCharacters } from '../hooks/useCharacters';\nimport { CharacterCard } from './CharacterCard';\nimport { Search } from './Search';\nimport './styles/characters.css';\n\nconst initialState = {\n    favorites: []\n}\n\nconst API = \"https://rickandmortyapi.com/api/character/\";\n\n// Esta es la implementación mínima de un reducer en redux\nconst favoritesReducer = (state, action) => {\n    switch (action.type) {\n        case 'ADD_TO_FAVORITE':\n           return {\n               ...state,\n               favorites: [...state.favorites, action.payload]\n           }\n    \n        default:\n            return state;\n    }\n}\n\nexport const Characters = () => {\n\n    const [search, setSearch] = useState('');\n\n    const [favorites, dispatch] = useReducer(favoritesReducer, initialState);\n\n    const searchInput = useRef(null);\n\n    const handleClick = (favorite) => {\n        dispatch({type:'ADD_TO_FAVORITE', payload: favorite})\n        characters.pop(favorite.id);\n    }\n\n    const characters = useCharacters(API);\n\n    //const handleSearch = () => {\n    //    setSearch(searchInput.current.value);\n    //}\n\n    const handleSearch = useCallback(() => {\n        setSearch(searchInput.current.value)\n    }, []);\n\n    // const filteredUsers = characters.filter(user => user.name.toLowerCase().includes(search.toLocaleLowerCase()));\n    const filteredUsers = useMemo(() => \n        characters.filter(user => {\n            return user.name.toLowerCase().includes(search.toLocaleLowerCase())\n        })\n    , [characters, search]);\n\n\n    console.log(characters)\n\n    return (\n        <>\n            <Search searchInput={searchInput} search={search} handleSearch={handleSearch}/>\n            <div className=\"characters__container\">\n                \n                {favorites.favorites.map(favorite => (\n                    <div>\n                        <CharacterCard key={favorite.id * 1000} {...favorite}/>\n                        <button type=\"button\" onClick={() => handleClick(favorite)}>Remove from Favorites</button>\n                    </div>\n                ))}\n                <br />\n                {filteredUsers.map(character => (\n                    <div>\n                        <CharacterCard key={character.id} {...character}/>\n                        <button type=\"button\" onClick={() => handleClick(character)}>Add to Favorites</button>\n                    </div>\n                ))} \n            </div>\n        </>\n    )\n}\n","/Volumes/HDD 1TB/Proyectos/React/react-hooks/src/components/CharacterCard.jsx",[],"/Volumes/HDD 1TB/Proyectos/React/react-hooks/src/context/ThemeContext.js",[],"/Volumes/HDD 1TB/Proyectos/React/react-hooks/src/components/Search.jsx",[],"/Volumes/HDD 1TB/Proyectos/React/react-hooks/src/hooks/useCharacters.js",["47"],"import React, { useEffect, useState } from \"react\";\n\nexport const useCharacters = (url) => {\n  const [characters, setCharacters] = useState([]);\n\n  useEffect(() => {\n    // No se puede hacer async/await, para hacer esto lo mejor es poner el codigo en una\n    // función async aparten y llamarla acá\n    fetch(url).then((response) =>\n      response.json().then((data) => setCharacters(data.results))\n    );\n  }, [url]); // va a estar escuchando que URL cambie\n\n  return characters;\n};\n",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":17,"nodeType":"54","messageId":"55","endLine":1,"endColumn":25},{"ruleId":"52","severity":1,"message":"56","line":9,"column":11,"nodeType":"54","messageId":"55","endLine":9,"endColumn":16},{"ruleId":"52","severity":1,"message":"57","line":1,"column":17,"nodeType":"54","messageId":"55","endLine":1,"endColumn":26},{"ruleId":"52","severity":1,"message":"58","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":13},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'color' is assigned a value but never used.","'useEffect' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]